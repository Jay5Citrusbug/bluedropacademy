name: Playwright Tests - Staging and Production

permissions:
  contents: read
  pages: write
  id-token: write

on:
  workflow_dispatch:
  schedule:
    - cron: '0 23 * * *'  # Runs at 2:00 AM Israel time
  push:
    branches: ['main']

env:
  SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
  TO_EMAIL: noam@bluedropacademy.com
  CC_EMAIL: jay5.citrusbug@gmail.com,jayshree@citrusbug.com
  FROM_EMAIL: bluedropacademy.aws@gmail.com
  ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
  ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}

jobs:
  run-tests-staging:
    runs-on: ubuntu-latest
    env:
      ENVIRONMENT: staging
      STORE_REPORT_API_ENDPOINT: https://stg-api-chat.bluedropacademy.com/api/admin
    name: Run Playwright Tests - Staging
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          npx playwright install --with-deps
          npm install @sendgrid/mail

      - name: Install jq and AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y jq unzip curl
          
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update

      - name: Verify AWS CLI
        run: aws --version

      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region ${{ secrets.S3_REGION }}

      - name: Clean previous test results
        run: |
          echo "Cleaning previous Playwright report..."
          rm -rf playwright-report/ report.html test-log.txt all-reports/staging || true

      - name: Set environment URLs
        run: |
          echo "URL_CHATBOT=https://bluedropacademy.wixsite.com/website-1/chat6" >> $GITHUB_ENV
          echo "URL_ADMIN=https://stg-chat.bluedropacademy.com/admin" >> $GITHUB_ENV

      - name: Run Playwright Tests
        id: run-tests
        continue-on-error: true
        run: npm run test:staging
        env:
          ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
          CHATBOT_EMAIL: ${{ secrets.CHATBOT_EMAIL }}
          CHATBOT_PASSWORD: ${{ secrets.CHATBOT_PASSWORD }}

      - name: Debug Playwright Report folder
        run: ls -la playwright-report

      - name: Generate standalone HTML report
        run: cp playwright-report/index.html playwright-report/report.html || true

      - name: Get current date with random suffix
        id: date
        run: echo "date=$(date '+%Y-%m-%d')-$(shuf -i 100-999 -n 1)" >> $GITHUB_OUTPUT

      - name: Extract test summary
        id: summary
        continue-on-error: true
        run: |
          if [ ! -f "playwright-report/report.json" ]; then
            echo "Report file not found!"
            echo "total=0" >> $GITHUB_OUTPUT
            echo "passed=0" >> $GITHUB_OUTPUT
            echo "failed=0" >> $GITHUB_OUTPUT
            echo "skipped=0" >> $GITHUB_OUTPUT
            exit 0
          fi

          PASSED=$(jq '.stats.expected // 0' playwright-report/report.json)
          FAILED=$(jq '.stats.unexpected // 0' playwright-report/report.json)
          SKIPPED=$(jq '.stats.skipped // 0' playwright-report/report.json)
          TOTAL=$(( PASSED + FAILED + SKIPPED ))

          echo "passed=${PASSED}" >> $GITHUB_OUTPUT
          echo "failed=${FAILED}" >> $GITHUB_OUTPUT
          echo "skipped=${SKIPPED}" >> $GITHUB_OUTPUT
          echo "total=${TOTAL}" >> $GITHUB_OUTPUT

      - name: Prepare Report Timestamp
        run: echo "REPORT_TIMESTAMP=$(date +"%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV

      - name: Move report to environment/date directory
        run: |
          mkdir -p all-reports/${{ env.ENVIRONMENT }}/${{ steps.date.outputs.date }}
          cp -r playwright-report/* all-reports/${{ env.ENVIRONMENT }}/${{ steps.date.outputs.date }}/

      - name: Upload Report to S3
        run: |
          aws s3 cp playwright-report/report.html s3://${{ secrets.S3_BUCKET_NAME }}/${{ env.ENVIRONMENT }}/${{ steps.date.outputs.date }}/report.html --acl public-read

      - name: Send Email Report
        if: always()
        run: node .github/scripts/sendreport.js
        env:
          REPORT_URL: https://${{ secrets.S3_BUCKET_NAME }}.s3.${{ secrets.S3_REGION }}.amazonaws.com/${{ env.ENVIRONMENT }}/${{ steps.date.outputs.date }}/report.html
          REPORT_TIMESTAMP: ${{ env.REPORT_TIMESTAMP }}
          GITHUB_REF_NAME: ${{ github.ref_name }}
          SENDGRID_API_KEY: ${{ env.SENDGRID_API_KEY }}
          TO_EMAIL: ${{ env.TO_EMAIL }}
          FROM_EMAIL: ${{ env.FROM_EMAIL }}
          TOTAL: ${{ steps.summary.outputs.total }}
          PASSED: ${{ steps.summary.outputs.passed }}
          FAILED: ${{ steps.summary.outputs.failed }}
          SKIPPED: ${{ steps.summary.outputs.skipped }}
          GITHUB_WORKSPACE: ${{ github.workspace }}

  run-tests-production:
    needs: run-tests-staging
    runs-on: ubuntu-latest
    env:
      ENVIRONMENT: production
      STORE_REPORT_API_ENDPOINT: https://api-chat.bluedropacademy.com/api/admin
    name: Run Playwright Tests - Production
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          npx playwright install --with-deps
          npm install @sendgrid/mail

      - name: Install jq and AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y jq unzip curl
          
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update

      - name: Verify AWS CLI
        run: aws --version

      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region ${{ secrets.S3_REGION }}

      - name: Clean previous test results
        run: |
          echo "Cleaning previous Playwright report..."
          rm -rf playwright-report/ report.html test-log.txt all-reports/production || true

      - name: Set environment URLs
        run: |
          echo "URL_ADMIN=https://chat.bluedropacademy.com/admin" >> $GITHUB_ENV
          echo "URL_CHATBOT=https://www.bluedropacademy.com/blue" >> $GITHUB_ENV

      - name: Run Playwright Tests
        id: run-tests
        continue-on-error: true
        run: npm run test:prod
        env:
          ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
          CHATBOT_EMAIL: ${{ secrets.CHATBOT_EMAIL }}
          CHATBOT_PASSWORD: ${{ secrets.CHATBOT_PASSWORD }}

      - name: Debug Playwright Report folder
        run: ls -la playwright-report

      - name: Generate standalone HTML report
        run: cp playwright-report/index.html playwright-report/report.html || true

      - name: Get current date with random suffix
        id: date
        run: echo "date=$(date '+%Y-%m-%d')-$(shuf -i 100-999 -n 1)" >> $GITHUB_OUTPUT

      - name: Extract test summary
        id: summary
        continue-on-error: true
        run: |
          if [ ! -f "playwright-report/report.json" ]; then
            echo "Report file not found!"
            echo "total=0" >> $GITHUB_OUTPUT
            echo "passed=0" >> $GITHUB_OUTPUT
            echo "failed=0" >> $GITHUB_OUTPUT
            echo "skipped=0" >> $GITHUB_OUTPUT
            exit 0
          fi

          PASSED=$(jq '.stats.expected // 0' playwright-report/report.json)
          FAILED=$(jq '.stats.unexpected // 0' playwright-report/report.json)
          SKIPPED=$(jq '.stats.skipped // 0' playwright-report/report.json)
          TOTAL=$(( PASSED + FAILED + SKIPPED ))

          echo "passed=${PASSED}" >> $GITHUB_OUTPUT
          echo "failed=${FAILED}" >> $GITHUB_OUTPUT
          echo "skipped=${SKIPPED}" >> $GITHUB_OUTPUT
          echo "total=${TOTAL}" >> $GITHUB_OUTPUT

      - name: Prepare Report Timestamp
        run: echo "REPORT_TIMESTAMP=$(date +"%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV

      - name: Move report to environment/date directory
        run: |
          mkdir -p all-reports/${{ env.ENVIRONMENT }}/${{ steps.date.outputs.date }}
          cp -r playwright-report/* all-reports/${{ env.ENVIRONMENT }}/${{ steps.date.outputs.date }}/

      - name: Upload Report to S3
        run: |
          aws s3 cp playwright-report/report.html s3://${{ secrets.S3_BUCKET_NAME }}/${{ env.ENVIRONMENT }}/${{ steps.date.outputs.date }}/report.html --acl public-read
      
      - name: Send Email Report
        if: always()
        run: node .github/scripts/sendreport.js
        env:
          REPORT_URL: https://${{ secrets.S3_BUCKET_NAME }}.s3.${{ secrets.S3_REGION }}.amazonaws.com/${{ env.ENVIRONMENT }}/${{ steps.date.outputs.date }}/report.html
          STORE_REPORT_API_ENDPOINT: ${{ env.STORE_REPORT_API_ENDPOINT }}
          REPORT_TIMESTAMP: ${{ env.REPORT_TIMESTAMP }}
          GITHUB_REF_NAME: ${{ github.ref_name }}
          SENDGRID_API_KEY: ${{ env.SENDGRID_API_KEY }}
          TO_EMAIL: ${{ env.TO_EMAIL }}
          FROM_EMAIL: ${{ env.FROM_EMAIL }}
          TOTAL: ${{ steps.summary.outputs.total }}
          PASSED: ${{ steps.summary.outputs.passed }}
          FAILED: ${{ steps.summary.outputs.failed }}
          SKIPPED: ${{ steps.summary.outputs.skipped }}
          GITHUB_WORKSPACE: ${{ github.workspace }}
