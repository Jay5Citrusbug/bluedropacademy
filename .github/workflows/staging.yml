name: Run Playwright Tests and Email Report

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '20 20 * * *'  # 2:00 AM IST (UTC+5:30)

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      report_date: ${{ steps.get_date.outputs.report_date }}
      total: ${{ steps.summary.outputs.total }}
      passed: ${{ steps.summary.outputs.passed }}
      failed: ${{ steps.summary.outputs.failed }}
      skipped: ${{ steps.summary.outputs.skipped }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Get report date
        id: get_date
        run: echo "report_date=$(date '+%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Run Playwright tests
        id: run-tests
        continue-on-error: true
        run: |
          mkdir -p playwright-report
          npx playwright test --reporter=json --output=playwright-report || true
          npx playwright test --reporter=html || true
          TEST_EXIT_CODE=$?
          echo "TEST_STATUS=$(if [ $TEST_EXIT_CODE -eq 0 ]; then echo 'PASSED'; else echo 'FAILED'; fi)" >> $GITHUB_ENV
          echo "TEST_EXIT_CODE=$TEST_EXIT_CODE" >> $GITHUB_ENV
          
      - name: Extract test summary
        id: summary
        run: |
          [ ! -f "test-results.json" ] && echo "Report not found!" && exit 1
          echo "total=$(jq '.suites | map(.specs | length) | add' test-results.json)" >> $GITHUB_OUTPUT
          echo "passed=$(jq '[.. | .status? | select(. == "passed")] | length' test-results.json)" >> $GITHUB_OUTPUT
          echo "failed=$(jq '[.. | .status? | select(. == "failed")] | length' test-results.json)" >> $GITHUB_OUTPUT
          echo "skipped=$(jq '[.. | .status? | select(. == "skipped")] | length' test-results.json)" >> $GITHUB_OUTPUT

      - name: Prepare report for Pages
        run: |
          mkdir -p site/staging-report-${{ steps.get_date.outputs.report_date }}
          mv playwright-report/* site/staging-report-${{ steps.get_date.outputs.report_date }}

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}
    outputs:
      page_url: ${{ steps.deploy.outputs.page_url }}

    permissions:
      pages: write
      id-token: write

    steps:
      - name: Deploy to GitHub Pages
        id: deploy
        uses: actions/deploy-pages@v4

  notify:
    needs: [build, deploy]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

    
      - name: Send Email Report
        if: always()
        run: node sendreport.js
        env:
          REPORT_URL: ${{ env.REPORT_URL }}
          REPORT_TIMESTAMP: ${{ env.REPORT_TIMESTAMP }}
          TEST_STATUS: ${{ env.TEST_STATUS }}
          GITHUB_REF_NAME: ${{ github.ref_name }}
          SENDGRID_API_KEY: ${{ env.SENDGRID_API_KEY }}
          TO_EMAIL: ${{ env.TO_EMAIL }}
          FROM_EMAIL: ${{ env.FROM_EMAIL }}
          TOTAL: ${{ steps.run-tests.outputs.total }}
          PASSED: ${{ steps.run-tests.outputs.passed }}
          FAILED: ${{ steps.run-tests.outputs.failed }}
          SKIPPED: ${{ steps.run-tests.outputs.skipped }}
          GITHUB_WORKSPACE: ${{ github.workspace }}
