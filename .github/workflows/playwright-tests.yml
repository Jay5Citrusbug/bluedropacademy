name: Run Playwright Tests and Email Report

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright Tests
        run: |
          npx playwright test --project=chromium --workers=1 \
            --reporter=json=test-results.json,html | tee test-log.txt

      - name: Get current date
        id: date
        run: echo "date=$(date '+%Y-%m-%d_%H-%M-%S')" >> $GITHUB_OUTPUT

      - name: Extract test summary
        id: summary
        run: |
          if [ ! -f "test-results.json" ]; then echo "Report file not found!" && exit 1; fi
          TOTAL=$(jq '.suites | map(.specs | length) | add' test-results.json)
          PASSED=$(jq '[.. | .status? | select(. == "passed")] | length' test-results.json)
          FAILED=$(jq '[.. | .status? | select(. == "failed")] | length' test-results.json)
          SKIPPED=$(jq '[.. | .status? | select(. == "skipped")] | length' test-results.json)

          echo "total=$TOTAL" >> $GITHUB_OUTPUT
          echo "passed=$PASSED" >> $GITHUB_OUTPUT
          echo "failed=$FAILED" >> $GITHUB_OUTPUT
          echo "skipped=$SKIPPED" >> $GITHUB_OUTPUT

      - name: Rename report folder with timestamp
        run: |
          if [ ! -d "playwright-report" ]; then echo "Playwright report folder not found!" && exit 1; fi
          mv playwright-report "report-${{ steps.date.outputs.date }}"

      - name: Upload HTML Report Artifact
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: report-${{ steps.date.outputs.date }}/index.html

      - name: Set report URL
        id: report_url
        run: echo "url=https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> $GITHUB_OUTPUT

      # - name: Send Email with Link to Report
      #   uses: dawidd6/action-send-mail@v3
      #   with:
      #     server_address: smtp.sendgrid.net
      #     server_port: 587
      #     username: "${{ secrets.SENDGRID_USERNAME }}"
      #     password: "${{ secrets.SENDGRID_API_KEY }}"
      #     subject: 🧪 Playwright Test Report - ${{ steps.date.outputs.date }}
      #     to: jay5.citrusbug@gmail.com
      #     from: noam@bluedropacademy.com
      #     body: |
      #       Hello Client,

      #       The automated Playwright test suite has completed.

      #       📅 **Report Date**: _${{ steps.date.outputs.date }}_

      #       **🔍 Test Summary**
      #       - Total Tests: **${{ steps.summary.outputs.total }}**
      #       - ✅ Passed: **${{ steps.summary.outputs.passed }}**
      #       - ❌ Failed: **${{ steps.summary.outputs.failed }}**
      #       - ⏭️ Skipped: **${{ steps.summary.outputs.skipped }}**

      #       🔗 **View the full HTML report here**:  
      #       https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/

      #       Best regards,  
      #       **QA Team**
