# unified-report.yml
name: Playwright Tests - Staging and Production
on:
  workflow_dispatch:
  push:
    branches: ['main']

env:
  SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
  TO_EMAIL: jay5.citrusbug@gmail.com
  FROM_EMAIL: bluedropacademy.aws@gmail.com

jobs:
  run-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [staging, production]
    name: Run Playwright Tests - ${{ matrix.environment }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          npx playwright install --with-deps
          npm install @sendgrid/mail

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Clean previous test results
        run: |
          echo "Cleaning previous Playwright report..."
          rm -rf playwright-report/ report.html test-log.txt || true

      - name: Set environment URLs
        run: |
          if [[ "${{ matrix.environment }}" == "staging" ]]; then
            echo "URL_ADMIN=https://staging.chat.bluedropacademy.com/admin" >> $GITHUB_ENV
            echo "URL_CHATBOT=https://www.staging.bluedropacademy.com/chatbot" >> $GITHUB_ENV
          else
            echo "URL_ADMIN=https://chat.bluedropacademy.com/admin" >> $GITHUB_ENV
            echo "URL_CHATBOT=https://www.bluedropacademy.com/chatbot" >> $GITHUB_ENV
          fi

      - name: Run Playwright Tests
        id: run-tests
        continue-on-error: true
        run: npx playwright test --project=chromium --workers=1

      - name: Debug Playwright Report folder
        run: ls -la playwright-report

      - name: Generate standalone HTML report
        run: cp playwright-report/index.html playwright-report/report.html || true

      - name: Get current date with timestamp
        id: date
        run: echo "date=$(date '+%Y-%m-%d')-$(shuf -i 100-999 -n 1)" >> $GITHUB_OUTPUT

      - name: Extract test summary
        id: summary
        continue-on-error: true
        run: |
          if [ ! -f "playwright-report/report.json" ]; then
            echo "Report file not found!"
            echo "total=0" >> $GITHUB_OUTPUT
            echo "passed=0" >> $GITHUB_OUTPUT
            echo "failed=0" >> $GITHUB_OUTPUT
            echo "skipped=0" >> $GITHUB_OUTPUT
            exit 0
          fi

          PASSED=$(jq '.stats.expected // 0' playwright-report/report.json)
          FAILED=$(jq '.stats.unexpected // 0' playwright-report/report.json)
          SKIPPED=$(jq '.stats.skipped // 0' playwright-report/report.json)
          TOTAL=$(( PASSED + FAILED + SKIPPED ))

          echo "passed=${PASSED}" >> $GITHUB_OUTPUT
          echo "failed=${FAILED}" >> $GITHUB_OUTPUT
          echo "skipped=${SKIPPED}" >> $GITHUB_OUTPUT
          echo "total=${TOTAL}" >> $GITHUB_OUTPUT

      - name: Prepare Report Timestamp
        run: echo "REPORT_TIMESTAMP=$(date +"%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV

      - name: Move report to environment/date directory
        run: |
          mkdir -p all-reports/${{ matrix.environment }}/${{ steps.date.outputs.date }}
          cp -r playwright-report/* all-reports/${{ matrix.environment }}/${{ steps.date.outputs.date }}/

      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: all-reports

      - name: Send Email Report
        if: always()
        run: node .github/scripts/sendreport.js
        env:
          REPORT_URL: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/all-reports/${{ matrix.environment }}/${{ steps.date.outputs.date }}/report.html
          REPORT_TIMESTAMP: ${{ env.REPORT_TIMESTAMP }}
          GITHUB_REF_NAME: ${{ github.ref_name }}
          SENDGRID_API_KEY: ${{ env.SENDGRID_API_KEY }}
          TO_EMAIL: ${{ env.TO_EMAIL }}
          FROM_EMAIL: ${{ env.FROM_EMAIL }}
          TOTAL: ${{ steps.summary.outputs.total }}
          PASSED: ${{ steps.summary.outputs.passed }}
          FAILED: ${{ steps.summary.outputs.failed }}
          SKIPPED: ${{ steps.summary.outputs.skipped }}
          GITHUB_WORKSPACE: ${{ github.workspace }}

  deploy-pages:
    needs: run-tests
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
    environment:
      name: github-pages
    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
