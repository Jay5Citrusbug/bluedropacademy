name: Playwright Tests with Email Reports

on:
  push:
    branches: ['main']
  workflow_dispatch:

env:
  REPORT_URL: https://jay5Citrusbug.github.io/bluedropacademy/report.html
  SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
  TO_EMAIL: jay5.citrusbug@gmail.com
  FROM_EMAIL: bluedropacademy.aws@gmail.com

jobs:
  test-and-report:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          npx playwright install --with-deps
          npm install @sendgrid/mail

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Run Playwright tests and generate reports
        id: run-tests
        continue-on-error: true
        run: |
          mkdir -p playwright-report
          # Run tests with JSON reporter and output to file
          npx playwright test --reporter=json > playwright-report/report.json || true
          # Run tests with HTML reporter (generates playwright-report/index.html)
          npx playwright test --reporter=html || true
          TEST_EXIT_CODE=$?
          echo "TEST_STATUS=$(if [ $TEST_EXIT_CODE -eq 0 ]; then echo 'PASSED'; else echo 'FAILED'; fi)" >> $GITHUB_ENV
          echo "TEST_EXIT_CODE=$TEST_EXIT_CODE" >> $GITHUB_ENV

          # Extract test counts and set as outputs (optional)
          echo "total=$(jq '[.. | .status?] | length' playwright-report/report.json)" >> $GITHUB_ENV
          echo "passed=$(jq '[.. | .status? | select(. == \"passed\")] | length' playwright-report/report.json)" >> $GITHUB_ENV
          echo "failed=$(jq '[.. | .status? | select(. == \"failed\")] | length' playwright-report/report.json)" >> $GITHUB_ENV
          echo "skipped=$(jq '[.. | .status? | select(. == \"skipped\")] | length' playwright-report/report.json)" >> $GITHUB_ENV

      - name: Prepare Report
        if: always()
        run: |
          mv playwright-report/index.html report.html
          TIMESTAMP=$(date +"%Y-%m-%d %H:%M:%S")
          echo "REPORT_TIMESTAMP=$TIMESTAMP" >> $GITHUB_ENV

      - name: Upload Report Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: .
          retention-days: 1

      - name: Send Email Report
        if: always()
        run: node .github/scripts/sendreport.js
        env:
          REPORT_URL: ${{ env.REPORT_URL }}
          REPORT_TIMESTAMP: ${{ env.REPORT_TIMESTAMP }}
          TEST_STATUS: ${{ env.TEST_STATUS }}
          GITHUB_REF_NAME: ${{ github.ref_name }}
          SENDGRID_API_KEY: ${{ env.SENDGRID_API_KEY }}
          TO_EMAIL: ${{ env.TO_EMAIL }}
          FROM_EMAIL: ${{ env.FROM_EMAIL }}
          TOTAL: ${{ env.total }}
          PASSED: ${{ env.passed }}
          FAILED: ${{ env.failed }}
          SKIPPED: ${{ env.skipped }}
          GITHUB_WORKSPACE: ${{ github.workspace }}

  deploy:
    needs: test-and-report
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}

    permissions:
      pages: write
      id-token: write

    steps:
      - name: Deploy to GitHub Pages
        id: deploy
        uses: actions/deploy-pages@v4
