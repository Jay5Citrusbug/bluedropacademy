name: Playwright Tests with Email Reports

on:
  push:
    branches: ['main']
  workflow_dispatch:

env:
  REPORT_URL: https://jay5Citrusbug.github.io/bluedropacademy/playwright-report/
  SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
  TO_EMAIL: jay5.citrusbug@gmail.com
  FROM_EMAIL: bluedropacademy.aws@gmail.com

jobs:
  test-and-report:
    runs-on: ubuntu-latest
    outputs:
      report_date: ${{ steps.set-date.outputs.report_date }}
    
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Set report date
        id: set-date
        run: echo "report_date=$(date +'%Y-%m-%d_%H-%M')" >> $GITHUB_OUTPUT

      - name: Install dependencies
        run: |
          npm ci
          npx playwright install --with-deps
          npm install @sendgrid/mail

      - name: Run Playwright tests
        id: run-tests
        run: |
          npx playwright test --reporter=html,json
          echo "TEST_STATUS=$(if [ $? -eq 0 ]; then echo 'PASSED'; else echo 'FAILED'; fi)" >> $GITHUB_ENV
          echo "TOTAL=$(grep -o '"total": [0-9]*' playwright-report/results.json | cut -d' ' -f2)" >> $GITHUB_ENV
          echo "PASSED=$(grep -o '"passed": [0-9]*' playwright-report/results.json | cut -d' ' -f2)" >> $GITHUB_ENV
          echo "FAILED=$(grep -o '"failed": [0-9]*' playwright-report/results.json | cut -d' ' -f2)" >> $GITHUB_ENV
          echo "SKIPPED=$(grep -o '"skipped": [0-9]*' playwright-report/results.json | cut -d' ' -f2)" >> $GITHUB_ENV

      - name: Prepare Report
        if: always()
        run: |
          mv playwright-report/index.html playwright-report/report.html
          echo "<meta http-equiv='refresh' content='0; url=report.html'>" > playwright-report/index.html

      - name: Upload Report Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: playwright-report/
          retention-days: 1

  deploy:
    needs: test-and-report
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}
    
    permissions:
      pages: write
      id-token: write

    steps:
      - name: Deploy to GitHub Pages
        id: deploy
        uses: actions/deploy-pages@v4

  notify:
    needs: [test-and-report, deploy]
    runs-on: ubuntu-latest

    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install @sendgrid/mail

      - name: Send Email Report
        if: always()
        run: node .github/scripts/sendreport.js
        env:
          REPORT_URL: ${{ env.REPORT_URL }}
          TEST_STATUS: ${{ env.TEST_STATUS }}
          GITHUB_REF_NAME: ${{ github.ref_name }}
          SENDGRID_API_KEY: ${{ env.SENDGRID_API_KEY }}
          TO_EMAIL: ${{ env.TO_EMAIL }}
          FROM_EMAIL: ${{ env.FROM_EMAIL }}