name: Playwright Tests with Email Notification

on:
  push:
    branches: ['main']
  schedule:
    - cron: '*/5 * * * *'  # Runs every 5 minutes
  workflow_dispatch:

env:
  REPORT_URL: https://jay5Citrusbug.github.io/bluedropacademy/playwright-report/
  TO_EMAIL: jay5.citrusbug@gmail.com
  FROM_EMAIL: bluedropacademy.aws@gmail.com

jobs:
  test-and-notify:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          npm ci
          npx playwright install --with-deps
          npm install @sendgrid/mail

      - name: Run Playwright tests
        id: run-tests
        run: |
          npx playwright test --reporter=html
          echo "TEST_STATUS=$(if [ $? -eq 0 ]; then echo 'PASSED'; else echo 'FAILED'; fi)" >> $GITHUB_ENV

      - name: Prepare Report
        if: always()
        run: |
          mv playwright-report/index.html playwright-report/report.html
          echo "<meta http-equiv='refresh' content='0; url=report.html'>" > playwright-report/index.html

      - name: Upload Report
        uses: actions/upload-pages-artifact@v3
        with:
          path: playwright-report/
          retention-days: 1

      - name: Send Minimal Email
        if: always()
        env:
          SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
        run: |
          node -e "
          const sgMail = require('@sendgrid/mail');
          sgMail.setApiKey(process.env.SENDGRID_API_KEY);
          
          sgMail.send({
            to: process.env.TO_EMAIL,
            from: process.env.FROM_EMAIL,
            subject: `Playwright Tests ${process.env.TEST_STATUS}`,
            text: \`Test report available at: ${process.env.REPORT_URL}\\n\\nStatus: ${process.env.TEST_STATUS}\\nBranch: ${process.env.GITHUB_REF_NAME}\`
          })
          .then(() => console.log('‚úÖ Email sent successfully'))
          .catch(error => {
            console.error('‚ùå Email failed:', error.response?.body || error.message);
            process.exit(1);
          });
          "

      - name: Verify Email
        if: always()
        run: |
          echo "========================================"
          echo "üìß Email should be sent to: $TO_EMAIL"
          echo "üåê Report URL: $REPORT_URL"
          echo "‚úÖ Check inbox for subject: 'Playwright Tests $TEST_STATUS'"
          echo "========================================"